static {
  const Reaction = require("mobx").Reaction
  const extras = require("mobx").extras
}
class {
  onDestroy() {
    this.$mobx && this.$mobx.dispose()
  }
}
$ {
  // intercept the renderBody function to allow mobx to track model references and react based on changes
  if (!component.baseRenderBody) {
    component.$mobx = new Reaction('reaction', () => {
      if (input.hint && input.hint !== true) console.debug("reacting in " + input.hint)
      component.forceUpdate()
    })
    component.baseRenderBody = input.renderBody
    input.renderBody = (out) => {
      component.$mobx.track(()=>{
        extras.allowStateChanges(false, ()=>{
          component.baseRenderBody(out)
        })
      })
    }
  }

}
<span.mobx-observer>
  <include(input)/>
</span>
